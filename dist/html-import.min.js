(function(){"use strict";window.HTMLImportElement=window.HTMLImportElement||function(){"use strict";function a(){return new Promise((u)=>setTimeout(u,0))}function b(u){return"[object HTMLScriptElement]"===Object.prototype.toString.call(u)}function c(u){return"[object HTMLTemplateElement]"===Object.prototype.toString.call(u)}function d(u,v){if(b(u))e(u,v);else for(let w of u.children)d(w,u)}function e(u,v){const w=document.createElement("script");f(u,w),w.text=u.text,u.src&&(w.src=u.src),v.removeChild(u)}function f(u,v){if(u.parentNode)return u.parentNode.insertBefore(v,u.nextSibling)}function g(u){return u.split("#")[0]}function h(u){return u.split("#")[1]}function i(u){u=g(u);const v=p.get(u);if(v)return v;const w=window.fetch(u).then((y)=>y.text());return p.set(u,w),w}function j(u,v,w,y,z){let A=u.getElementById(v);if(A||(A=k(u,v)),!A)throw new Error(`Could not find element #${v} in ${g(z)}`);return c(A)&&A.content?m(A.content):(A=A.cloneNode(!0),w?A.id=w:!0===y&&A.removeAttribute("id"),document.importNode(A,!0))}function k(u,v){const w=u.querySelectorAll("template");for(let y of w){const z=y.content.getElementById(v);if(z)return z}}function l(u){return m(u.body)}function m(u){if(!u)throw new Error("Missing sourceElement");const v=document.createDocumentFragment(),w=u.children;for(let y of w){const z=document.importNode(y,!0);v.appendChild(z)}return v}function n(u){const v=[];for(let w of u){const y=a().then(()=>w.ready);v.push(y)}return Promise.all(v)}function o(u,v,w,y){const z=new DOMParser,A=z.parseFromString(u,"text/html");return v?j(A,v,w,y):l(A)}const p=new Map,q=Symbol(),r=Symbol(),s=Symbol();class t extends HTMLElement{get ready(){return this[q]}set ready(u){}get src(){return this.getAttribute("src")}set src(u){}get as(){return this.getAttribute("as")}set as(u){}constructor(u){return u=super(u),u[q]=new Promise((v,w)=>{u[r]=v,u[s]=w}),u}connectedCallback(){const u=this.hasAttribute("src");if(!u)return this[s](new Error("The 'src' attribute is required"));const v=this.getAttribute("src");if(!v)return this[s](new Error("The 'src' attribute is empty"));const w=h(v),y=this.getAttribute("as");this[r](i(v).then((A)=>o(A,w,y,""===y,v)).then((A)=>{var B=A.querySelectorAll("html-import");return d(A,this),f(this,A),n(B)}))}}return customElements.define("html-import",t),t}()})();
