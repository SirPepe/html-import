(function(){"use strict";window.HTMLImportElement=window.HTMLImportElement||function(){function a(){return new Promise((a)=>setTimeout(a,0))}function b(a){return"[object HTMLScriptElement]"===Object.prototype.toString.call(a)}function c(a){return"[object HTMLTemplateElement]"===Object.prototype.toString.call(a)}function d(a,c){if(b(a))e(a,c);else for(let b of a.children)d(b,a)}function e(a,b){const c=document.createElement("script");f(a,c),c.text=a.text,a.src&&(c.src=a.src),b.removeChild(a)}function f(a,b){if(a.parentNode)return a.parentNode.insertBefore(b,a.nextSibling)}function g(a){return a.split("#")[0]}function h(a){return a.split("#")[1]}function i(a){a=g(a);const b=p.get(a);if(b)return b;const c=window.fetch(a).then((a)=>a.text());return p.set(a,c),c}function j(a,b,d,e,f,h){let i=a.getElementById(b);if(i||(i=k(a,b)),!i)throw new Error(`Could not find element #${b} in ${g(h)}`);if(f&&!i.matches(f))throw new Error(`Could not find element #${b} matching selector "${f}" in ${g(h)}`);return c(i)&&i.content?m(i.content):(i=i.cloneNode(!0),d?i.id=d:!0===e&&i.removeAttribute("id"),document.importNode(i,!0))}function k(a,b){const c=a.querySelectorAll("template");for(let d of c){const a=d.content.getElementById(b);if(a)return a}}function l(a,b){return m(a.body,b)}function m(a,b){if(!a)throw new Error("Missing sourceElement");const c=document.createDocumentFragment(),d=a.children;for(let e of d)if(!b||e.matches(b)){const a=document.importNode(e,!0);c.appendChild(a)}return c}function n(b){const c=[];for(let d of b){const b=a().then(()=>d.ready);c.push(b)}return Promise.all(c)}function o(a,b,c,d,e,f){const g=new DOMParser,h=g.parseFromString(a,"text/html");return b?j(h,b,c,d,e,f):l(h,e)}const p=new Map,q=Symbol(),r=Symbol(),s=Symbol();class t extends HTMLElement{get ready(){return this[q]}set ready(a){}get src(){return this.getAttribute("src")}set src(a){}get as(){return this.getAttribute("as")}set as(a){}get selector(){return this.getAttribute("selector")}set selector(a){}constructor(a){return a=super(a),a[q]=new Promise((b,c)=>{a[r]=b,a[s]=c}),a}connectedCallback(){const a=this.hasAttribute("src");if(!a)return this[s](new Error("The 'src' attribute is required"));const b=this.getAttribute("src");if(!b)return this[s](new Error("The 'src' attribute is empty"));const c=h(b),e=this.getAttribute("as");this[r](i(b).then((a)=>o(a,c,e,""===e,this.selector,b)).then((a)=>{var b=a.querySelectorAll("html-import");return d(a,this),f(this,a),n(b)}))}}return customElements.define("html-import",t),t}()})();
